# File Storage - Production Nginx Configuration
# This configuration provides strict security headers, rate limiting,
# and optimized performance for serving the React SPA and proxying the API.

# Backend upstream
upstream backend {
    server localhost:8080;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=120r/m;
limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=10r/m;

# HTTP -> HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name managefiles.duckdns.org;
    
    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name managefiles.duckdns.org;

    # SSL/TLS and HTTP/2 Configuration
    ssl_certificate /etc/letsencrypt/live/managefiles.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/managefiles.duckdns.org/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ecdh_curve auto;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_trusted_certificate /etc/letsencrypt/live/managefiles.duckdns.org/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Resolver for OCSP
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    
    # Security Headers (applied to all responses)
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # File upload limit
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;
    gzip_min_length 256;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # ETag
    etag on;

    # Logging
    access_log /dev/stdout;
    error_log /dev/stderr warn;

    # ========================================
    # STATIC ASSETS (with aggressive caching)
    # ========================================
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        access_log off;
        
        # Security headers for assets
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
    }

    # ========================================
    # index.html (NO caching + strict CSP)
    # ========================================
    location = /index.html {
        root /usr/share/nginx/html;
        
        # Never cache index.html
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        expires 0;
        
        # STRICT Content Security Policy for production
        # This is your PRIMARY defense against XSS when using localStorage
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self';
            style-src 'self' 'unsafe-inline';
            img-src 'self' data: https:;
            font-src 'self' data:;
            connect-src 'self';
            frame-src 'self' https:;
            media-src 'self' https:;
            object-src 'none';
            base-uri 'self';
            form-action 'self';
            frame-ancestors 'none';
            upgrade-insecure-requests;
        " always;
        
        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    }

    # ========================================
    # SPA FALLBACK (all non-API, non-asset requests)
    # ========================================
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Apply same CSP as index.html
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self';
            style-src 'self' 'unsafe-inline';
            img-src 'self' data: https:;
            font-src 'self' data:;
            connect-src 'self';
            frame-src 'self' https:;
            media-src 'self' https:;
            object-src 'none';
            base-uri 'self';
            form-action 'self';
            frame-ancestors 'none';
            upgrade-insecure-requests;
        " always;
    }

    # ========================================
    # API PROXY (general endpoints with rate limiting)
    # ========================================
    location /api/ {
        # Rate limiting (120 requests/minute with burst of 20)
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;

        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Cookie $http_cookie;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Security: Don't expose backend errors
        proxy_intercept_errors on;
        
        # API-specific security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # ========================================
    # LOGIN/REGISTER (stricter rate limiting)
    # ========================================
    location ~ ^/api/v1/auth/(login|register)$ {
        # Stricter rate limiting for auth endpoints (10 requests/minute)
        limit_req zone=login_limit burst=3 nodelay;
        limit_req_status 429;

        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }

    # ========================================
    # FILE UPLOAD (strictest rate limiting + longer timeouts)
    # ========================================
    location /api/v1/files/upload {
        # Very strict rate limiting (10 uploads/minute with burst of 3)
        limit_req zone=upload_limit burst=3 nodelay;
        limit_req_status 429;

        proxy_pass http://backend;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        
        # Longer timeouts for uploads
        proxy_connect_timeout 10s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Disable buffering for upload progress
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header Cache-Control "no-store" always;
    }

    # ========================================
    # HEALTH CHECK (no rate limiting)
    # ========================================
    location = /api/health {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        access_log off;
        
        add_header Cache-Control "no-store" always;
    }

    # ========================================
    # ERROR PAGES
    # ========================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # ========================================
    # DENY ACCESS TO SENSITIVE FILES
    # ========================================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}




